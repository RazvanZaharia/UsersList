apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.users.razvan.users"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "${applicationId}.runner.RxAndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField 'String', 'ENDPOINT', "\"https://jsonplaceholder.typicode.com\""
        }

        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix " debug"
            debuggable true
            buildConfigField 'String', 'ENDPOINT', "\"https://jsonplaceholder.typicode.com\""
        }
    }

    sourceSets {
        def commonTestDir = 'src/commonTest/java'
        test {
            java.srcDir commonTestDir
        }
        androidTest {
            java.srcDir commonTestDir
        }
    }

    android {
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
    }
}

dependencies {
    final BUTTERKNIFE_VERSION = '8.8.1'
    final DAGGER_VERSION = '2.8'
    final daggerCompiler = "com.google.dagger:dagger-compiler:$DAGGER_VERSION"
    final RETROFIT_VERSION = '2.1.0'
    final RXANDROID_VERSION = '1.2.1'
    final RXBINDING_VERSION = '0.4.0'
    final SUPPORT_LIBRARY_VERSION = '27.1.1'
    final POWERMOCK_VERSION = '1.6.4'
    final PLAY_SERVICES_VERSION = '15.0.1'
    final MULTIDEX_VERSION = '1.0.3'
    final jUnit = "junit:junit:4.12"
    final mockito = "org.mockito:mockito-core:1.10.19"

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "com.android.support:multidex:$MULTIDEX_VERSION"

    // ButterKnife
    implementation "com.jakewharton:butterknife:$BUTTERKNIFE_VERSION"
    annotationProcessor "com.jakewharton:butterknife-compiler:$BUTTERKNIFE_VERSION"

    // Dagger
    implementation "com.google.dagger:dagger:$DAGGER_VERSION"
    compileOnly 'org.glassfish:javax.annotation:10.0-b28'
    annotationProcessor daggerCompiler
    testAnnotationProcessor daggerCompiler
    androidTestAnnotationProcessor daggerCompiler

    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:$RETROFIT_VERSION"
    implementation "com.squareup.retrofit2:converter-gson:$RETROFIT_VERSION"
    implementation "com.squareup.retrofit2:adapter-rxjava:$RETROFIT_VERSION"
    implementation "com.squareup.retrofit2:adapter-rxjava:$RETROFIT_VERSION"

    // Rx
    implementation "io.reactivex:rxandroid:$RXANDROID_VERSION"
    implementation "com.jakewharton.rxbinding:rxbinding:$RXBINDING_VERSION"

    // Support Library
    implementation "com.android.support:cardview-v7:$SUPPORT_LIBRARY_VERSION"
    implementation "com.android.support:recyclerview-v7:$SUPPORT_LIBRARY_VERSION"
    implementation "com.android.support:support-annotations:$SUPPORT_LIBRARY_VERSION"

    androidTestImplementation jUnit
    androidTestImplementation mockito

    // PowerMock
    testImplementation "org.powermock:powermock-module-junit4-rule:$POWERMOCK_VERSION"
    testImplementation "org.powermock:powermock-module-junit4:$POWERMOCK_VERSION"
    testImplementation "org.powermock:powermock-api-mockito:$POWERMOCK_VERSION"
    testImplementation "org.powermock:powermock-classloading-xstream:$POWERMOCK_VERSION"

    implementation "com.google.android.gms:play-services-maps:$PLAY_SERVICES_VERSION"

    // Required -- JUnit 4 framework
    testImplementation jUnit
    // Optional -- Mockito framework
    testImplementation mockito

    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
